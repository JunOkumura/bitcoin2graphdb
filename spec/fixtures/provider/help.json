{
    "result": "== Blockchain ==\ngetbestblockhash\ngetblock \"blockhash\" ( verbosity ) \ngetblockchaininfo\ngetblockcount\ngetblockhash height\ngetblockheader \"hash\" ( verbose )\ngetblockstats hash_or_height ( stats )\ngetchaintips\ngetchaintxstats ( nblocks blockhash )\ngetdifficulty\ngetmempoolancestors txid (verbose)\ngetmempooldescendants txid (verbose)\ngetmempoolentry txid\ngetmempoolinfo\ngetrawmempool ( verbose )\ngettxout \"txid\" n ( include_mempool )\ngettxoutproof [\"txid\",...] ( blockhash )\ngettxoutsetinfo\npreciousblock \"blockhash\"\npruneblockchain\nsavemempool\nscantxoutset <action> ( <scanobjects> )\nverifychain ( checklevel nblocks )\nverifytxoutproof \"proof\"\n\n== Control ==\ngetmemoryinfo (\"mode\")\nhelp ( \"command\" )\nlogging ( <include> <exclude> )\nstop\nuptime\n\n== Generating ==\ngenerate nblocks ( maxtries )\ngeneratetoaddress nblocks address (maxtries)\n\n== Mining ==\ngetblocktemplate ( TemplateRequest )\ngetmininginfo\ngetnetworkhashps ( nblocks height )\nprioritisetransaction <txid> <dummy value> <fee delta>\nsubmitblock \"hexdata\"  ( \"dummy\" )\n\n== Network ==\naddnode \"node\" \"add|remove|onetry\"\nclearbanned\ndisconnectnode \"[address]\" [nodeid]\ngetaddednodeinfo ( \"node\" )\ngetconnectioncount\ngetnettotals\ngetnetworkinfo\ngetpeerinfo\nlistbanned\nping\nsetban \"subnet\" \"add|remove\" (bantime) (absolute)\nsetnetworkactive true|false\n\n== Rawtransactions ==\ncombinepsbt [\"psbt\",...]\ncombinerawtransaction [\"hexstring\",...]\nconverttopsbt \"hexstring\" ( permitsigdata iswitness )\ncreatepsbt [{\"txid\":\"id\",\"vout\":n},...] [{\"address\":amount},{\"data\":\"hex\"},...] ( locktime ) ( replaceable )\ncreaterawtransaction [{\"txid\":\"id\",\"vout\":n},...] [{\"address\":amount},{\"data\":\"hex\"},...] ( locktime ) ( replaceable )\ndecodepsbt \"psbt\"\ndecoderawtransaction \"hexstring\" ( iswitness )\ndecodescript \"hexstring\"\nfinalizepsbt \"psbt\" ( extract )\nfundrawtransaction \"hexstring\" ( options iswitness )\ngetrawtransaction \"txid\" ( verbose \"blockhash\" )\nsendrawtransaction \"hexstring\" ( allowhighfees )\nsignrawtransaction \"hexstring\" ( [{\"txid\":\"id\",\"vout\":n,\"scriptPubKey\":\"hex\",\"redeemScript\":\"hex\"},...] [\"privatekey1\",...] sighashtype )\nsignrawtransactionwithkey \"hexstring\" [\"privatekey1\",...] ( [{\"txid\":\"id\",\"vout\":n,\"scriptPubKey\":\"hex\",\"redeemScript\":\"hex\"},...] sighashtype )\ntestmempoolaccept [\"rawtxs\"] ( allowhighfees )\n\n== Util ==\ncreatemultisig nrequired [\"key\",...] ( \"address_type\" )\nestimatesmartfee conf_target (\"estimate_mode\")\nsignmessagewithprivkey \"privkey\" \"message\"\nvalidateaddress \"address\"\nverifymessage \"address\" \"signature\" \"message\"\n\n== Wallet ==\nabandontransaction \"txid\"\nabortrescan\naddmultisigaddress nrequired [\"key\",...] ( \"label\" \"address_type\" )\nbackupwallet \"destination\"\nbumpfee \"txid\" ( options ) \ncreatewallet \"wallet_name\" ( disable_private_keys )\ndumpprivkey \"address\"\ndumpwallet \"filename\"\nencryptwallet \"passphrase\"\ngetaccount (Deprecated, will be removed in V0.18. To use this command, start bitcoind with -deprecatedrpc=accounts)\ngetaccountaddress (Deprecated, will be removed in V0.18. To use this command, start bitcoind with -deprecatedrpc=accounts)\ngetaddressbyaccount (Deprecated, will be removed in V0.18. To use this command, start bitcoind with -deprecatedrpc=accounts)\ngetaddressesbylabel \"label\"\ngetaddressinfo \"address\"\ngetbalance ( \"(dummy)\" minconf include_watchonly )\ngetnewaddress ( \"label\" \"address_type\" )\ngetrawchangeaddress ( \"address_type\" )\ngetreceivedbyaccount (Deprecated, will be removed in V0.18. To use this command, start bitcoind with -deprecatedrpc=accounts)\ngetreceivedbyaddress \"address\" ( minconf )\ngettransaction \"txid\" ( include_watchonly )\ngetunconfirmedbalance\ngetwalletinfo\nimportaddress \"address\" ( \"label\" rescan p2sh )\nimportmulti \"requests\" ( \"options\" )\nimportprivkey \"privkey\" ( \"label\" ) ( rescan )\nimportprunedfunds\nimportpubkey \"pubkey\" ( \"label\" rescan )\nimportwallet \"filename\"\nkeypoolrefill ( newsize )\nlistaccounts (Deprecated, will be removed in V0.18. To use this command, start bitcoind with -deprecatedrpc=accounts)\nlistaddressgroupings\nlistlabels ( \"purpose\" )\nlistlockunspent\nlistreceivedbyaccount (Deprecated, will be removed in V0.18. To use this command, start bitcoind with -deprecatedrpc=accounts)\nlistreceivedbyaddress ( minconf include_empty include_watchonly address_filter )\nlistsinceblock ( \"blockhash\" target_confirmations include_watchonly include_removed )\nlisttransactions (label count skip include_watchonly)\nlistunspent ( minconf maxconf  [\"addresses\",...] [include_unsafe] [query_options])\nlistwallets\nloadwallet \"filename\"\nlockunspent unlock ([{\"txid\":\"txid\",\"vout\":n},...])\nmove (Deprecated, will be removed in V0.18. To use this command, start bitcoind with -deprecatedrpc=accounts)\nremoveprunedfunds \"txid\"\nrescanblockchain (\"start_height\") (\"stop_height\")\nsendfrom (Deprecated, will be removed in V0.18. To use this command, start bitcoind with -deprecatedrpc=accounts)\nsendmany \"\" {\"address\":amount,...} ( minconf \"comment\" [\"address\",...] replaceable conf_target \"estimate_mode\")\nsendtoaddress \"address\" amount ( \"comment\" \"comment_to\" subtractfeefromamount replaceable conf_target \"estimate_mode\")\nsetaccount (Deprecated, will be removed in V0.18. To use this command, start bitcoind with -deprecatedrpc=accounts)\nsethdseed ( \"newkeypool\" \"seed\" )\nsettxfee amount\nsignmessage \"address\" \"message\"\nsignrawtransactionwithwallet \"hexstring\" ( [{\"txid\":\"id\",\"vout\":n,\"scriptPubKey\":\"hex\",\"redeemScript\":\"hex\"},...] sighashtype )\nunloadwallet ( \"wallet_name\" )\nwalletcreatefundedpsbt [{\"txid\":\"id\",\"vout\":n},...] [{\"address\":amount},{\"data\":\"hex\"},...] ( locktime ) ( replaceable ) ( options bip32derivs )\nwalletlock\nwalletpassphrase \"passphrase\" timeout\nwalletpassphrasechange \"oldpassphrase\" \"newpassphrase\"\nwalletprocesspsbt \"psbt\" ( sign \"sighashtype\" bip32derivs )\n\n== Zmq ==\ngetzmqnotifications"
}
